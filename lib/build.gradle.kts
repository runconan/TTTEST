/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

configurations.all {
    // SLF4J 중복 바인딩 제거
    exclude(group = "org.slf4j", module = "slf4j-simple")
    exclude(group = "org.slf4j", module = "slf4j-nop")
    exclude(group = "org.apache.logging.log4j", module = "log4j-slf4j-impl")
    exclude(group = "org.slf4j", module = "slf4j-log4j12") // 이미 있으면 OK
}

plugins {
    // Apply the java-library plugin for API and implementation separation.
    //`java-library`
    java
    id("org.springframework.boot") version "3.3.2"
    id("io.spring.dependency-management") version "1.1.5"
}

group = "com.example"
version = "0.0.1-SNAPSHOT"

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
        // Confluent 아티팩트 (kafka-avro-serializer 등) 해결용
    maven(url = "https://packages.confluent.io/maven/")
    // (옵션) WSO2 Orbit 번들 등 필요 시
    maven(url = "https://maven.wso2.org/nexus/content/repositories/releases/")
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    
    implementation(libs.commons.math3)  // api 대신 implementation 사용 //api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
    implementation("org.springframework.boot:spring-boot-starter")

    // Siddhi CEP
    implementation("io.siddhi:siddhi-core:5.1.30")

    // Siddhi Kafka Source/Sink
    implementation("io.siddhi.extension.io.kafka:siddhi-io-kafka:5.0.19")

    // Siddhi JSON Mapper (Kafka에서 온 JSON → 이벤트 매핑)
    implementation("io.siddhi.extension.map.json:siddhi-map-json:5.2.5")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
}



tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// (선택) SLF4J 바인딩 충돌 방지
configurations.all {
    exclude(group = "org.slf4j", module = "slf4j-log4j12")
}
